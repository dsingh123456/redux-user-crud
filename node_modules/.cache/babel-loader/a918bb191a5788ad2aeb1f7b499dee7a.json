{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\redux\\\\redux-user-crud\\\\src\\\\features\\\\users\\\\EditUser.jsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { userUpdated } from \"./usersSlice\";\nexport function EditUser() {\n  _s();\n\n  const {\n    pathname\n  } = useLocation();\n  const userId = parseInt(pathname.replace(\"/edit-user/\", \"\"));\n  const user = useSelector(state => state.users.entities.find(user => user.id === userId));\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [name, setName] = useState(user.name);\n  const [email, setEmail] = useState(user.email);\n  const [address, setAddress] = useState(user.address);\n  const [contact, setContact] = useState(user.contact);\n  const [error, setError] = useState(null);\n\n  const handleName = e => setName(e.target.value);\n\n  const handleEmail = e => setEmail(e.target.value);\n\n  const handleAddress = e => setAddress(e.target.value);\n\n  const handleContact = e => setContact(e.target.value);\n\n  const handleClick = () => {\n    if (name && email) {\n      dispatch(userUpdated({\n        id: userId,\n        name,\n        email,\n        address,\n        contact\n      }));\n      setError(null);\n      history.push(\"/\");\n    } else {\n      setError(\"Fill in all fields\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"three columns\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nameInput\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"u-full-width\",\n          type: \"text\",\n          placeholder: \"test@mailbox.com\",\n          id: \"nameInput\",\n          onChange: handleName,\n          value: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"emailInput\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"u-full-width\",\n          type: \"email\",\n          placeholder: \"test@mailbox.com\",\n          id: \"emailInput\",\n          onChange: handleEmail,\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"emailInput\",\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"u-full-width\",\n          type: \"email\",\n          placeholder: \"test@mailbox.com\",\n          id: \"emailInput\",\n          onChange: handleAddress,\n          value: address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"emailInput\",\n          children: \"Contact number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"u-full-width\",\n          type: \"email\",\n          placeholder: \"test@mailbox.com\",\n          id: \"emailInput\",\n          onChange: handleContact,\n          value: contact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), error && error, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          className: \"button-primary\",\n          children: \"Save user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditUser, \"POA0aYkGFL0d/+tbd4EP7ZByZOM=\", false, function () {\n  return [useLocation, useSelector, useDispatch, useHistory];\n});\n\n_c = EditUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"sources":["F:/redux/redux-user-crud/src/features/users/EditUser.jsx"],"names":["useDispatch","useSelector","useHistory","useLocation","useState","userUpdated","EditUser","pathname","userId","parseInt","replace","user","state","users","entities","find","id","dispatch","history","name","setName","email","setEmail","address","setAddress","contact","setContact","error","setError","handleName","e","target","value","handleEmail","handleAddress","handleContact","handleClick","push"],"mappings":"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","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport { useState } from \"react\";\r\nimport { userUpdated } from \"./usersSlice\";\r\n\r\nexport function EditUser() {\r\n  const { pathname } = useLocation();\r\n  const userId = parseInt(pathname.replace(\"/edit-user/\", \"\"));\r\n\r\n  const user = useSelector((state) =>\r\n    state.users.entities.find((user) => user.id === userId)\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [name, setName] = useState(user.name);\r\n  const [email, setEmail] = useState(user.email);\r\n  const [address, setAddress] = useState(user.address);\r\n  const [contact, setContact] = useState(user.contact);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleName = (e) => setName(e.target.value);\r\n  const handleEmail = (e) => setEmail(e.target.value);\r\n  const handleAddress = (e) => setAddress(e.target.value);\r\n  const handleContact = (e) => setContact(e.target.value);\r\n\r\n  const handleClick = () => {\r\n    if (name && email) {\r\n      dispatch(\r\n        userUpdated({\r\n          id: userId,\r\n          name,\r\n          email,\r\n          address,\r\n          contact,\r\n        })\r\n      );\r\n\r\n      setError(null);\r\n      history.push(\"/\");\r\n    } else {\r\n      setError(\"Fill in all fields\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <h1>Edit user</h1>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"three columns\">\r\n          <label htmlFor=\"nameInput\">Name</label>\r\n          <input\r\n            className=\"u-full-width\"\r\n            type=\"text\"\r\n            placeholder=\"test@mailbox.com\"\r\n            id=\"nameInput\"\r\n            onChange={handleName}\r\n            value={name}\r\n          />\r\n          <label htmlFor=\"emailInput\">Email</label>\r\n          <input\r\n            className=\"u-full-width\"\r\n            type=\"email\"\r\n            placeholder=\"test@mailbox.com\"\r\n            id=\"emailInput\"\r\n            onChange={handleEmail}\r\n            value={email}\r\n          />\r\n             <label htmlFor=\"emailInput\">Address</label>\r\n          <input\r\n            className=\"u-full-width\"\r\n            type=\"email\"\r\n            placeholder=\"test@mailbox.com\"\r\n            id=\"emailInput\"\r\n            onChange={handleAddress}\r\n            value={address}\r\n          />\r\n            <label htmlFor=\"emailInput\">Contact number</label>\r\n          <input\r\n            className=\"u-full-width\"\r\n            type=\"email\"\r\n            placeholder=\"test@mailbox.com\"\r\n            id=\"emailInput\"\r\n            onChange={handleContact}\r\n            value={contact}\r\n          />\r\n          {error && error}\r\n          <button onClick={handleClick} className=\"button-primary\">\r\n            Save user\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}